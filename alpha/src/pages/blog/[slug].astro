---
import { Markdown } from "astro/components"
import format from "date-fns/format"
import sanityClient from "../../lib/sanityClient"
import { kebabCase } from "../../lib/utils"
import BaseLayout from "../../layouts/BaseLayout.astro"
import { postQuery } from "../../lib/queries"
import { Post } from "../../lib/interfaces"

export async function getStaticPaths() {
  const data: { posts: Post[] } = await sanityClient
    .fetch(postQuery)
    .then(response => response)
  return data.posts.map(post => {
    return {
      params: { slug: post.slug },
      props: { post }
    }
  })
}

const { slug } = Astro.request.params
const { post } = Astro.props as { post: Post }
const {
  author,
  body,
  categories,
  keywords,
  publishedAt,
  seoDescription,
  seoImage,
  seoTitle,
  title
} = post
const date = format(new Date(publishedAt), "eeee, do MMMM yyyy")
const tags = keywords.split(", ")
---
<BaseLayout
  title={title}
  seoDescription={seoDescription}
  keywords={keywords}
  seoImage={seoImage}
  seoTitle={seoTitle}
  slug={slug}
  twitterHandle={author.twitterHandle}
>
  <div>
    <h1>{title}</h1>
    <p>published on: {date}</p>
    <p>by:
      <a href={`/author/${author.slug}`}>{post.author.name}</a>
    </p>
    <ul>
      in: {categories.map(category =>
        <li><a href={`/category/${category.slug}`}>{category.title}</a></li>
      )}
    </ul>
    <ul>
      tags: {tags.map(tag =>
        <li><a href={`/tags/${kebabCase(tag)}`}>{tag}</a></li>
      )}
    </ul>
    <Markdown>{body}</Markdown>
  </div>
</BaseLayout>

<!-- prettier-ignore -->
<style lang="scss">
li {
  display: inline;
  &:not(:last-child)::after {
    content: ', ';
  }
}
</style>

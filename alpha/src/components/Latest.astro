---
import format from "date-fns/format"
import sanityClient from "../lib/sanityClient"
import { toPlainText } from "../lib/utils"
import { latestPostsQuery } from "../lib/queries"
import { Post } from "../lib/interfaces"

const response = await sanityClient.fetch(latestPostsQuery)
const data: { posts: Post[] } = await response
const { posts } = data
---
<section>
  <!-- <h2 class="text-3xl font-bold mb-7">Latest Posts</h2> -->
  <div class="posts-cards grid grid-cols-1 gap-v md:grid-cols-2 lg:grid-cols-3">
    {posts.map(post =>
      <div class="posts-card">
        <div>
          <a href={`/blog/${post.slug}`}>
            <div class="image rounded-sm h-50 bg-amber-300 mb-6"></div>
          </a>
        </div>
        <div>
          <ul class="uppercase text-xs font-medium text-pink-500 mb-1.5">
            {post.categories.map(category =>
              <li class="horizontal-list inline">{category.title}</li>
            )}
          </ul>
          <h3 class="text-2xl font-bold mb-3 leading-5">
            <a href={`/blog/${post.slug}`}>{post.title}</a>
          </h3>
          <p class="excerpt serif mb-5 text-slate-500">
            {toPlainText(post.body).substring(0, 210)}
            <!-- <a
              href={`/blog/${post.slug}`}
              class="serif underline text-slate-600"
            >
              read&nbsp;more
            </a> -->
          </p>
          <div class="flex gap-3">
            <div class="avatar rounded-full bg-amber-300"></div>
            <div>
              <p class="font-medium text-sm">
                <a href={`/authors/${post.author.slug}`}>{post.author.name}</a>
              </p>
              <p class="text-slate-500 text-xs">
                {format(new Date(post.publishedAt), "MMM do, yyyy")}
                &bull;
                {Math.ceil(toPlainText(post.body).split(/\W+/).length / 275)}
                min read
              </p>
            </div>
          </div>
        </div>
      </div>
    )}
  </div>
</section>

<!-- <style lang="scss">
li {
  &:not(:last-child)::after {
    content: ', ';
  }
}

.avatar {
  width: 3rem;
}
</style> -->

---
import { Markdown } from "astro/components"
import groq from "groq"
import sanityClient from "../../sanityClient"
import BaseLayout from "../../layouts/BaseLayout.astro"

export async function getStaticPaths() {
  const query = groq`*[_type == "post"]{
    author->,
    body,
    "categories": categories[]->,
    publishedAt,
    seoDescription,
    seoImage,
    seoKeywords,
    seoTitle,
    "slug": slug.current,
    title,
    "siteName": *[_type == "site"][0].siteName,
    "twitterHandle": *[_type == "site"][0].twitterHandle
  }`
  const data = await sanityClient.fetch(query).then(response => response)
  return data.map(post => {
    return {
      params: { slug: post.slug },
      props: { post }
    }
  })
}

const { slug } = Astro.request.params
const { post } = Astro.props

const options = {
  weekday: "long",
  year: "numeric",
  month: "long",
  day: "numeric"
}
const date = new Date(post.publishedAt).toLocaleDateString("en-GB", options)
---
<BaseLayout
  title={post.title}
  seoDescription={post.seoDescription}
  keywords={post.seoKeywords}
  seoTitle={post.seoTitle}
  siteDescription={post.siteDescription}
  siteName={post.siteName}
  slug={post.slug}
  twitterHandle={post.twitterHandle}
>
  <div>
    <h1>{post.title}</h1>
    <p>published on: {date}</p>
    <p>by:
      <a href=`/author/${post.author.slug.current}`>{post.author.name}</a>
    </p>
    <ul>
      in: {post.categories.map(item =>
        <li><a href=`/category/${item.slug.current}`>{item.title}</a></li>
      )}
    </ul>
    <br>
    <Markdown>{post.body}</Markdown>
  </div>
</BaseLayout>

<!-- prettier-ignore -->
<style lang="scss">
li {
  display: inline;
  &:not(:last-child)::after {
    content: ', ';
  }
}
</style>

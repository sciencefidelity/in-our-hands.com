---
import { Markdown } from "astro/components"
import groq from "groq"
import sanityClient from "../../sanityClient"
import BaseLayout from "../../layouts/BaseLayout.astro"

export async function getStaticPaths( ) {
  const query = groq`*[_type == "author"]{
    bio,
    name,
    "posts": *[_type == "post" && author._ref == ^._id] | order(publishedAt desc){
      publishedAt, title, slug
    },
    "slug": slug.current
  }[count(posts) > 0]`
  const data = await sanityClient.fetch(query).then(response => response)
  return data.map(author => {
    return {
      params: { slug: author.slug },
      props: { author }
    }
  })
}

const { slug } = Astro.request.params
const { author } = Astro.props

const options = {
  weekday: "long",
  year: "numeric",
  month: "long",
  day: "numeric"
}

const metaTitle = `Author: ${author.name}`
---
<BaseLayout title={metaTitle}>
  <div>
    <h1>Author: {author.name}</h1>
    <br>
    <h2>Bio</h2>
    <Markdown>{author.bio}</Markdown>
    <br>
    <h2>Posts</h2>
    <ul>
      {author.posts.map(item =>
        <li><a href=`/blog/${item.slug.current}`>{item.title}</a><br>
          {new Date(item.publishedAt).toLocaleDateString("en-GB", options)}
        </li>
      )}
    </ul>
    <br>
    <p><a href="/authors">All authors</a></p>
  </div>
</BaseLayout>

<!-- prettier-ignore -->
<style>

</style>
